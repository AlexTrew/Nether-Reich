[gd_scene load_steps=1 format=2]

[ext_resource id=1 path="house_d.png" type="Texture"]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0: hint_albedo;


void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float oren_nayar_roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    oren_nayar_roughness_out = roughness;
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node0_in0_vector = vec3(0.0, 0.0, 0.0);
	// output sockets definitions
	vec4 node0_out0_color;
	float node0_out1_alpha;
	
	node0_in0_vector = vec3(UV, 0.0);
	node_tex_image(node0_in0_vector, texture_0, node0_out0_color, node0_out1_alpha);
	
	
	// node: 'Diffuse BSDF'
	// type: 'ShaderNodeBsdfDiffuse'
	// input sockets handling
	vec4 node1_in0_color = node0_out0_color;
	float node1_in1_roughness = float(0.0);
	vec3 node1_in2_normal = NORMAL;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_specular;
	float node1_bsdf_out2_oren_nayar_roughness;
	
	node_bsdf_diffuse(node1_in0_color, node1_in1_roughness, node1_bsdf_out0_albedo,
		node1_bsdf_out1_specular, node1_bsdf_out2_oren_nayar_roughness);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SPECULAR = node1_bsdf_out1_specular;
	NORMAL = node1_in2_normal;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = node1_bsdf_out2_oren_nayar_roughness;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)
shader_param/texture_0 = ExtResource(1)

[sub_resource id=3 type="ArrayMesh"]

resource_name = "Cube"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0, 6.0, -5.0, -3.0, 3.0, -5.0, -3.0, 3.0, 5.0, 0.0, 6.0, 5.0, 0.0, -1.0, 5.0, 0.0, 6.0, 5.0, -3.0, 3.0, 5.0, -3.0, -1.0, 5.0, -3.0, -1.0, 5.0, -3.0, 3.0, 5.0, -3.0, 3.0, -5.0, -3.0, -1.0, -5.0, 0.0, -1.0, -5.0, 3.0, -1.0, -5.0, 3.0, -1.0, 5.0, 0.0, -1.0, 5.0, 3.0, -1.0, -5.0, 3.0, 3.0, -5.0, 3.0, 3.0, 5.0, 3.0, -1.0, 5.0, 0.0, -1.0, -5.0, 0.0, 6.0, -5.0, 3.0, 3.0, -5.0, 3.0, -1.0, -5.0, -3.0, -1.0, -5.0, -3.0, 3.0, -5.0, -3.0, -1.0, -5.0, -3.0, -1.0, 5.0, 3.0, -1.0, 5.0, 3.0, 3.0, 5.0, 3.0, 3.0, -5.0, 0.0, 6.0, -5.0, 0.0, 6.0, 5.0, 3.0, 3.0, 5.0),
		Vector3Array(-0.707107, 0.707107, 0.0, -0.707107, 0.707107, 0.0, -0.707107, 0.707107, 0.0, -0.707107, 0.707107, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.0),
		FloatArray(0.0, 0.0, 1.0, 1.0, -1.8257e-08, -1.8257e-08, 1.0, 1.0, -7.14723e-08, -7.14723e-08, 1.0, 1.0, -5.32152e-08, -5.32152e-08, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.000833916, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, 0.0, 1.0, 0.0, -1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.000298264, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, -0.000298264, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -0.000833916, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.000118904, 0.249858, 0.000118948, 0.500045, 0.687005, 0.500045, 0.687004, 0.249858, 0.282282, 1.00098, 0.282282, 0.510564, 0.00183639, 0.720503, 0.00183636, 1.00098, 0.781434, 0.999074, 0.999204, 0.999074, 0.999204, 0.313596, 0.781434, 0.313596, -3.97377e-05, 0.561857, -3.97377e-05, 0.591291, 0.125468, 0.591291, 0.125468, 0.561857, 0.999204, 0.313596, 0.781434, 0.313596, 0.781434, 0.999074, 0.999204, 0.999074, 0.282759, 1.00098, 0.282759, 0.510293, 9.10461e-05, 0.720503, 9.10461e-05, 1.00098, 0.562559, 1.00098, 0.562559, 0.720503, -3.97377e-05, 0.532424, 0.125468, 0.532424, 0.56383, 1.00098, 0.56383, 0.720503, 0.000118883, 0.00017947, 0.000118904, 0.249858, 0.687004, 0.249858, 0.687004, 0.00017947),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 0, 3, 2, 4, 6, 5, 4, 7, 6, 8, 10, 9, 8, 11, 10, 12, 14, 13, 12, 15, 14, 16, 18, 17, 16, 19, 18, 20, 22, 21, 20, 23, 22, 24, 21, 25, 24, 20, 21, 26, 15, 12, 26, 27, 15, 28, 5, 29, 28, 4, 5, 30, 32, 31, 30, 33, 32)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Cube" type="MeshInstance" parent="."]

mesh = SubResource(3)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)
